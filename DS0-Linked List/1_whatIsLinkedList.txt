
* What is Linked List??
-> A linked list is a linear data structure, in which the elements are not stored at contiguous memory locations. 
   The elements in a linked list are linked using pointers.

* Why Linked List? 
-> Arrays can be used to store linear data of similar types, but arrays have the following limitations:

    1. The size of the arrays is fixed: So we must know the upper limit on the number of elements in advance. Also, 
      generally, the allocated memory is equal to the upper limit irrespective of the usage. 
    2.Insertion of a new element / Deletion of a existing element in an array of elements is expensive: The room has 
      to be created for the new elements and to create room existing elements have to be shifted but in Linked list if 
      we have the head node then we can traverse to any node through it and insert new node at the required position.

* Drawbacks of Linked Lists: 
->
    1. Random access is not allowed. We have to access elements sequentially starting from the first node(head node). 
       So we cannot do a binary search with linked lists efficiently with its default implementation. 
    2. Extra memory space for a pointer is required with each element of the list. 
    3. Not cache-friendly. Since array elements are contiguous locations, there is the locality of reference which is 
       not there in the case of linked lists.
    4. It takes a lot of time in traversing and changing the pointers.
    5. It will be confusing when we work with pointers.
    6. Direct access to an element is not possible in a linked list as in an array by index.
    7. Searching for an element is costly and requires O(n) time complexity.
    8. Sorting of linked lists is very complex and costly.
